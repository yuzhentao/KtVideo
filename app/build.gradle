apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

static def getCurrentTime() {
    return new Date().format("yyyy-MM-dd")
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == "debug") {
                output.outputFileName = "KtVideo_${android.defaultConfig.versionName}_debug_${getCurrentTime()}.apk"
            } else if (variant.buildType.name == "release") {
                output.outputFileName = "KtVideo_${android.defaultConfig.versionName}_release_${getCurrentTime()}.apk"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["ktx"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["legacy_support_v4"]
    implementation rootProject.ext.dependencies["constraint_layout"]
    implementation rootProject.ext.dependencies["recycler_view"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["work_runtime_ktx"]
    implementation rootProject.ext.dependencies["work_rajava2"]
    implementation rootProject.ext.dependencies["lifecycle_livedata_ktx"]
    implementation rootProject.ext.dependencies["lifecycle_viewmodel_ktx"]
    implementation rootProject.ext.dependencies["lifecycle_extensions"]
    implementation rootProject.ext.dependencies["material"]
    implementation 'com.google.android:flexbox:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton:butterknife:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.arialyy.aria:core:3.8.14'
    kapt 'com.arialyy.aria:compiler:3.8.14'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'
    implementation 'com.shuyu:gsyVideoPlayer-java:7.1.2'
    implementation 'com.shuyu:gsyVideoPlayer-ex_so:7.1.2'
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation project(path: ':transitionhelper')
    implementation project(':common')
    implementation rootProject.ext.otherDependencies["arouterApi"]
    kapt rootProject.ext.otherDependencies["arouterCompiler"]
}